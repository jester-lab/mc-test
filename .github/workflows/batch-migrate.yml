name: Extract and Print YAML

on:
  push:
    paths:
      - "batch-migration/**"  # Change this to your target subfolder
    branches:
      - main
  workflow_dispatch:

jobs:
  process_yaml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: List contents of batch-migration subfolder
        run: |
          echo "Listing contents of the batch-migration subfolder"
          ls batch-migration
          
      - name: Find new YAML file
        id: find_yaml
        run: |
          echo "Finding any YAML file in subfolder"
          FILE=$(ls batch-migration/*.yaml | head -n 1)
          echo "Found file: $FILE"
          echo "file=$FILE" >> $GITHUB_ENV

      - name: Parse YAML file
        if: env.file != ''
        uses: mikefarah/yq@v4
        with:
          args: e '.' "${{ env.file }}"

      - name: Print parsed YAML
        if: env.file != ''
        run: |
          echo "Parsing YAML file: ${{ env.file }}"
          yq e '.' "${{ env.file }}"
          
      - name: Convert YAML to JSON
        if: env.file != ''
        id: convert_yaml_to_json
        run: |
          echo "Converting YAML to JSON"
          cat "${{ env.file }}" | yq e -o=json > converted.json
          cat converted.json
          
      - name: Map YAML to JSON format
        if: env.file != ''
        id: map_yaml_to_json
        run: |
          echo "Mapping YAML to JSON format"
          cat converted.json | jq '{
            "bbs-server-url": .server_url,
            "bbs-project": .project,
            "bbs-repo": .repo,
            "gh_target_org_name": .org_name,
            "repo-props": {
              "program_name": .repo_props.program_name,
              "bb_project_name": .repo_props.bb_project_name,
              "bb_repo_name": .repo_props.bb_repo_name,
              "repo_type": .repo_props.repo_type,
              "product_id": .repo_props.product_id,
              "product_uuid": .repo_props.product_uuid,
              "tech_asset_id": .repo_props.tech_asset_id,
              "tech_asset_uuid": .repo_props.tech_asset_uuid,
              "tech_asset_tag": .repo_props.tech_asset_tag
            }
          }' > mapped.json
          cat mapped.json
          
      - name: Create GitHub Issue with JSON content
        if: env.file != ''
        run: |
          echo "Creating GitHub issue with JSON content"
          JSON_CONTENT=$(cat mapped.json | jq -R -s '.')
          echo ${JSON_CONTENT}
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d "{\"title\": \"New Issue from YAML\", \"body\": ${JSON_CONTENT}}"
